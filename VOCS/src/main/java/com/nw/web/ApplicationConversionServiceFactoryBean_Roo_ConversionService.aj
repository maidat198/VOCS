// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.nw.web;

import com.nw.domain.AcmBillCycle;
import com.nw.domain.ActionPriceComponentMap;
import com.nw.domain.ActionType;
import com.nw.domain.Actions;
import com.nw.domain.BalType;
import com.nw.domain.BillingCycle;
import com.nw.domain.BillingCycleType;
import com.nw.domain.Block;
import com.nw.domain.BlockRateTableMap;
import com.nw.domain.CalcUnit;
import com.nw.domain.Category;
import com.nw.domain.ColumnDT;
import com.nw.domain.ColumnDecisionTableMap;
import com.nw.domain.DecisionTable;
import com.nw.domain.DynamicReserve;
import com.nw.domain.DynamicReserveRateTableMap;
import com.nw.domain.Event;
import com.nw.domain.EventActionMap;
import com.nw.domain.EventActionTypeMap;
import com.nw.domain.Formula;
import com.nw.domain.GeoHomeZone;
import com.nw.domain.GeoNetZone;
import com.nw.domain.MapACMBalBal;
import com.nw.domain.MapShareBalBal;
import com.nw.domain.NormParam;
import com.nw.domain.NormValue;
import com.nw.domain.Normalizer;
import com.nw.domain.NormalizerNormParamMap;
import com.nw.domain.NormalizerNormValueMap;
import com.nw.domain.Offer;
import com.nw.domain.OfferActionMap;
import com.nw.domain.OfferParameterMap;
import com.nw.domain.Parameters;
import com.nw.domain.PriceComponent;
import com.nw.domain.PriceComponentBlockMap;
import com.nw.domain.PriceRateMap;
import com.nw.domain.RateTable;
import com.nw.domain.RateTableResult;
import com.nw.domain.ReserveInfo;
import com.nw.domain.ReserveInfoActionMap;
import com.nw.domain.ResultRateMap;
import com.nw.domain.RowDT;
import com.nw.domain.RowDecisionTableMap;
import com.nw.domain.RowOCS;
import com.nw.domain.SortPriceComponent;
import com.nw.domain.SortPriceRateTableMap;
import com.nw.domain.Threshold;
import com.nw.domain.ThresholdBalTypeMap;
import com.nw.domain.TriggerDestination;
import com.nw.domain.TriggerEvent;
import com.nw.domain.TriggerEventType;
import com.nw.domain.TriggerFieldBuilder;
import com.nw.domain.TriggerFieldFormat;
import com.nw.domain.TriggerFieldList;
import com.nw.domain.TriggerMsg;
import com.nw.domain.TriggerMsgField;
import com.nw.domain.TriggerOCS;
import com.nw.domain.TriggerType;
import com.nw.domain.UnitType;
import com.nw.domain.ZoneData;
import com.nw.domain.ZoneMap;
import com.nw.domain.Zones;
import com.nw.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<AcmBillCycle, String> ApplicationConversionServiceFactoryBean.getAcmBillCycleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.AcmBillCycle, java.lang.String>() {
            public String convert(AcmBillCycle acmBillCycle) {
                return new StringBuilder().append(acmBillCycle.getAcmBillCycleId()).toString();
            }
        };
    }
    
    public Converter<Long, AcmBillCycle> ApplicationConversionServiceFactoryBean.getIdToAcmBillCycleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.AcmBillCycle>() {
            public com.nw.domain.AcmBillCycle convert(java.lang.Long id) {
                return AcmBillCycle.findAcmBillCycle(id);
            }
        };
    }
    
    public Converter<String, AcmBillCycle> ApplicationConversionServiceFactoryBean.getStringToAcmBillCycleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.AcmBillCycle>() {
            public com.nw.domain.AcmBillCycle convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AcmBillCycle.class);
            }
        };
    }
    
    public Converter<ActionPriceComponentMap, String> ApplicationConversionServiceFactoryBean.getActionPriceComponentMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ActionPriceComponentMap, java.lang.String>() {
            public String convert(ActionPriceComponentMap actionPriceComponentMap) {
                return new StringBuilder().append(actionPriceComponentMap.getPcIndex()).toString();
            }
        };
    }
    
    public Converter<Long, ActionPriceComponentMap> ApplicationConversionServiceFactoryBean.getIdToActionPriceComponentMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ActionPriceComponentMap>() {
            public com.nw.domain.ActionPriceComponentMap convert(java.lang.Long id) {
                return ActionPriceComponentMap.findActionPriceComponentMap(id);
            }
        };
    }
    
    public Converter<String, ActionPriceComponentMap> ApplicationConversionServiceFactoryBean.getStringToActionPriceComponentMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ActionPriceComponentMap>() {
            public com.nw.domain.ActionPriceComponentMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ActionPriceComponentMap.class);
            }
        };
    }
    
    public Converter<ActionType, String> ApplicationConversionServiceFactoryBean.getActionTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ActionType, java.lang.String>() {
            public String convert(ActionType actionType) {
                return new StringBuilder().append(actionType.getActionTypeName()).toString();
            }
        };
    }
    
    public Converter<Long, ActionType> ApplicationConversionServiceFactoryBean.getIdToActionTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ActionType>() {
            public com.nw.domain.ActionType convert(java.lang.Long id) {
                return ActionType.findActionType(id);
            }
        };
    }
    
    public Converter<String, ActionType> ApplicationConversionServiceFactoryBean.getStringToActionTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ActionType>() {
            public com.nw.domain.ActionType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ActionType.class);
            }
        };
    }
    
    public Converter<Actions, String> ApplicationConversionServiceFactoryBean.getActionsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Actions, java.lang.String>() {
            public String convert(Actions actions) {
                return new StringBuilder().append(actions.getActionName()).append(' ').append(actions.getActionType()).append(' ').append(actions.getCategory_id()).append(' ').append(actions.getSortPriceComponentId()).toString();
            }
        };
    }
    
    public Converter<Long, Actions> ApplicationConversionServiceFactoryBean.getIdToActionsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Actions>() {
            public com.nw.domain.Actions convert(java.lang.Long id) {
                return Actions.findActions(id);
            }
        };
    }
    
    public Converter<String, Actions> ApplicationConversionServiceFactoryBean.getStringToActionsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Actions>() {
            public com.nw.domain.Actions convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Actions.class);
            }
        };
    }
    
    public Converter<BalType, String> ApplicationConversionServiceFactoryBean.getBalTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.BalType, java.lang.String>() {
            public String convert(BalType balType) {
                return new StringBuilder().append(balType.getBalTypeName()).append(' ').append(balType.getDescription()).append(' ').append(balType.getExternalId()).append(' ').append(balType.getBalTypeType()).toString();
            }
        };
    }
    
    public Converter<Long, BalType> ApplicationConversionServiceFactoryBean.getIdToBalTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.BalType>() {
            public com.nw.domain.BalType convert(java.lang.Long id) {
                return BalType.findBalType(id);
            }
        };
    }
    
    public Converter<String, BalType> ApplicationConversionServiceFactoryBean.getStringToBalTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.BalType>() {
            public com.nw.domain.BalType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BalType.class);
            }
        };
    }
    
    public Converter<BillingCycle, String> ApplicationConversionServiceFactoryBean.getBillingCycleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.BillingCycle, java.lang.String>() {
            public String convert(BillingCycle billingCycle) {
                return new StringBuilder().append(billingCycle.getCycleBeginDate()).append(' ').append(billingCycle.getCycleEndDate()).append(' ').append(billingCycle.getStates()).toString();
            }
        };
    }
    
    public Converter<Long, BillingCycle> ApplicationConversionServiceFactoryBean.getIdToBillingCycleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.BillingCycle>() {
            public com.nw.domain.BillingCycle convert(java.lang.Long id) {
                return BillingCycle.findBillingCycle(id);
            }
        };
    }
    
    public Converter<String, BillingCycle> ApplicationConversionServiceFactoryBean.getStringToBillingCycleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.BillingCycle>() {
            public com.nw.domain.BillingCycle convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BillingCycle.class);
            }
        };
    }
    
    public Converter<BillingCycleType, String> ApplicationConversionServiceFactoryBean.getBillingCycleTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.BillingCycleType, java.lang.String>() {
            public String convert(BillingCycleType billingCycleType) {
                return new StringBuilder().append(billingCycleType.getBillingCycleTypeName()).append(' ').append(billingCycleType.getQuantity()).append(' ').append(billingCycleType.getBeginDate()).append(' ').append(billingCycleType.getRemark()).toString();
            }
        };
    }
    
    public Converter<Long, BillingCycleType> ApplicationConversionServiceFactoryBean.getIdToBillingCycleTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.BillingCycleType>() {
            public com.nw.domain.BillingCycleType convert(java.lang.Long id) {
                return BillingCycleType.findBillingCycleType(id);
            }
        };
    }
    
    public Converter<String, BillingCycleType> ApplicationConversionServiceFactoryBean.getStringToBillingCycleTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.BillingCycleType>() {
            public com.nw.domain.BillingCycleType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BillingCycleType.class);
            }
        };
    }
    
    public Converter<Block, String> ApplicationConversionServiceFactoryBean.getBlockToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Block, java.lang.String>() {
            public String convert(Block block) {
                return new StringBuilder().append(block.getBlockType()).append(' ').append(block.getBlockName()).append(' ').append(block.getAffectedObjType()).append(' ').append(block.getAffectedValue()).toString();
            }
        };
    }
    
    public Converter<Long, Block> ApplicationConversionServiceFactoryBean.getIdToBlockConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Block>() {
            public com.nw.domain.Block convert(java.lang.Long id) {
                return Block.findBlock(id);
            }
        };
    }
    
    public Converter<String, Block> ApplicationConversionServiceFactoryBean.getStringToBlockConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Block>() {
            public com.nw.domain.Block convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Block.class);
            }
        };
    }
    
    public Converter<BlockRateTableMap, String> ApplicationConversionServiceFactoryBean.getBlockRateTableMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.BlockRateTableMap, java.lang.String>() {
            public String convert(BlockRateTableMap blockRateTableMap) {
                return new StringBuilder().append(blockRateTableMap.getComponentType()).append(' ').append(blockRateTableMap.getRateTableIndex()).toString();
            }
        };
    }
    
    public Converter<Long, BlockRateTableMap> ApplicationConversionServiceFactoryBean.getIdToBlockRateTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.BlockRateTableMap>() {
            public com.nw.domain.BlockRateTableMap convert(java.lang.Long id) {
                return BlockRateTableMap.findBlockRateTableMap(id);
            }
        };
    }
    
    public Converter<String, BlockRateTableMap> ApplicationConversionServiceFactoryBean.getStringToBlockRateTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.BlockRateTableMap>() {
            public com.nw.domain.BlockRateTableMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), BlockRateTableMap.class);
            }
        };
    }
    
    public Converter<CalcUnit, String> ApplicationConversionServiceFactoryBean.getCalcUnitToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.CalcUnit, java.lang.String>() {
            public String convert(CalcUnit calcUnit) {
                return new StringBuilder().append(calcUnit.getCalcUnitName()).append(' ').append(calcUnit.getCalcUnitType()).toString();
            }
        };
    }
    
    public Converter<Long, CalcUnit> ApplicationConversionServiceFactoryBean.getIdToCalcUnitConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.CalcUnit>() {
            public com.nw.domain.CalcUnit convert(java.lang.Long id) {
                return CalcUnit.findCalcUnit(id);
            }
        };
    }
    
    public Converter<String, CalcUnit> ApplicationConversionServiceFactoryBean.getStringToCalcUnitConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.CalcUnit>() {
            public com.nw.domain.CalcUnit convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CalcUnit.class);
            }
        };
    }
    
    public Converter<Category, String> ApplicationConversionServiceFactoryBean.getCategoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Category, java.lang.String>() {
            public String convert(Category category) {
                return new StringBuilder().append(category.getCategoryType()).append(' ').append(category.getCategoryName()).append(' ').append(category.getCategoryParentId()).toString();
            }
        };
    }
    
    public Converter<Long, Category> ApplicationConversionServiceFactoryBean.getIdToCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Category>() {
            public com.nw.domain.Category convert(java.lang.Long id) {
                return Category.findCategory(id);
            }
        };
    }
    
    public Converter<String, Category> ApplicationConversionServiceFactoryBean.getStringToCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Category>() {
            public com.nw.domain.Category convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Category.class);
            }
        };
    }
    
    public Converter<ColumnDT, String> ApplicationConversionServiceFactoryBean.getColumnDTToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ColumnDT, java.lang.String>() {
            public String convert(ColumnDT columnDT) {
                return new StringBuilder().append(columnDT.getAttribute()).append(' ').append(columnDT.getColumnIndex()).append(' ').append(columnDT.getColumnName()).toString();
            }
        };
    }
    
    public Converter<Long, ColumnDT> ApplicationConversionServiceFactoryBean.getIdToColumnDTConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ColumnDT>() {
            public com.nw.domain.ColumnDT convert(java.lang.Long id) {
                return ColumnDT.findColumnDT(id);
            }
        };
    }
    
    public Converter<String, ColumnDT> ApplicationConversionServiceFactoryBean.getStringToColumnDTConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ColumnDT>() {
            public com.nw.domain.ColumnDT convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ColumnDT.class);
            }
        };
    }
    
    public Converter<ColumnDecisionTableMap, String> ApplicationConversionServiceFactoryBean.getColumnDecisionTableMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ColumnDecisionTableMap, java.lang.String>() {
            public String convert(ColumnDecisionTableMap columnDecisionTableMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, ColumnDecisionTableMap> ApplicationConversionServiceFactoryBean.getIdToColumnDecisionTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ColumnDecisionTableMap>() {
            public com.nw.domain.ColumnDecisionTableMap convert(java.lang.Long id) {
                return ColumnDecisionTableMap.findColumnDecisionTableMap(id);
            }
        };
    }
    
    public Converter<String, ColumnDecisionTableMap> ApplicationConversionServiceFactoryBean.getStringToColumnDecisionTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ColumnDecisionTableMap>() {
            public com.nw.domain.ColumnDecisionTableMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ColumnDecisionTableMap.class);
            }
        };
    }
    
    public Converter<DecisionTable, String> ApplicationConversionServiceFactoryBean.getDecisionTableToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.DecisionTable, java.lang.String>() {
            public String convert(DecisionTable decisionTable) {
                return new StringBuilder().append(decisionTable.getDecisionTableName()).append(' ').append(decisionTable.getDefaultFormulaIndex()).append(' ').append(decisionTable.getRemark()).toString();
            }
        };
    }
    
    public Converter<Long, DecisionTable> ApplicationConversionServiceFactoryBean.getIdToDecisionTableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.DecisionTable>() {
            public com.nw.domain.DecisionTable convert(java.lang.Long id) {
                return DecisionTable.findDecisionTable(id);
            }
        };
    }
    
    public Converter<String, DecisionTable> ApplicationConversionServiceFactoryBean.getStringToDecisionTableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.DecisionTable>() {
            public com.nw.domain.DecisionTable convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DecisionTable.class);
            }
        };
    }
    
    public Converter<DynamicReserve, String> ApplicationConversionServiceFactoryBean.getDynamicReserveToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.DynamicReserve, java.lang.String>() {
            public String convert(DynamicReserve dynamicReserve) {
                return new StringBuilder().append(dynamicReserve.getDynamicReserveName()).toString();
            }
        };
    }
    
    public Converter<Long, DynamicReserve> ApplicationConversionServiceFactoryBean.getIdToDynamicReserveConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.DynamicReserve>() {
            public com.nw.domain.DynamicReserve convert(java.lang.Long id) {
                return DynamicReserve.findDynamicReserve(id);
            }
        };
    }
    
    public Converter<String, DynamicReserve> ApplicationConversionServiceFactoryBean.getStringToDynamicReserveConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.DynamicReserve>() {
            public com.nw.domain.DynamicReserve convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DynamicReserve.class);
            }
        };
    }
    
    public Converter<DynamicReserveRateTableMap, String> ApplicationConversionServiceFactoryBean.getDynamicReserveRateTableMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.DynamicReserveRateTableMap, java.lang.String>() {
            public String convert(DynamicReserveRateTableMap dynamicReserveRateTableMap) {
                return new StringBuilder().append(dynamicReserveRateTableMap.getRateTableIndex()).toString();
            }
        };
    }
    
    public Converter<Long, DynamicReserveRateTableMap> ApplicationConversionServiceFactoryBean.getIdToDynamicReserveRateTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.DynamicReserveRateTableMap>() {
            public com.nw.domain.DynamicReserveRateTableMap convert(java.lang.Long id) {
                return DynamicReserveRateTableMap.findDynamicReserveRateTableMap(id);
            }
        };
    }
    
    public Converter<String, DynamicReserveRateTableMap> ApplicationConversionServiceFactoryBean.getStringToDynamicReserveRateTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.DynamicReserveRateTableMap>() {
            public com.nw.domain.DynamicReserveRateTableMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DynamicReserveRateTableMap.class);
            }
        };
    }
    
    public Converter<Event, String> ApplicationConversionServiceFactoryBean.getEventToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Event, java.lang.String>() {
            public String convert(Event event) {
                return new StringBuilder().append(event.getEventName()).append(' ').append(event.getDescription()).append(' ').append(event.getEventType()).toString();
            }
        };
    }
    
    public Converter<Long, Event> ApplicationConversionServiceFactoryBean.getIdToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Event>() {
            public com.nw.domain.Event convert(java.lang.Long id) {
                return Event.findEvent(id);
            }
        };
    }
    
    public Converter<String, Event> ApplicationConversionServiceFactoryBean.getStringToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Event>() {
            public com.nw.domain.Event convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Event.class);
            }
        };
    }
    
    public Converter<EventActionMap, String> ApplicationConversionServiceFactoryBean.getEventActionMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.EventActionMap, java.lang.String>() {
            public String convert(EventActionMap eventActionMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, EventActionMap> ApplicationConversionServiceFactoryBean.getIdToEventActionMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.EventActionMap>() {
            public com.nw.domain.EventActionMap convert(java.lang.Long id) {
                return EventActionMap.findEventActionMap(id);
            }
        };
    }
    
    public Converter<String, EventActionMap> ApplicationConversionServiceFactoryBean.getStringToEventActionMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.EventActionMap>() {
            public com.nw.domain.EventActionMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), EventActionMap.class);
            }
        };
    }
    
    public Converter<EventActionTypeMap, String> ApplicationConversionServiceFactoryBean.getEventActionTypeMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.EventActionTypeMap, java.lang.String>() {
            public String convert(EventActionTypeMap eventActionTypeMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, EventActionTypeMap> ApplicationConversionServiceFactoryBean.getIdToEventActionTypeMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.EventActionTypeMap>() {
            public com.nw.domain.EventActionTypeMap convert(java.lang.Long id) {
                return EventActionTypeMap.findEventActionTypeMap(id);
            }
        };
    }
    
    public Converter<String, EventActionTypeMap> ApplicationConversionServiceFactoryBean.getStringToEventActionTypeMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.EventActionTypeMap>() {
            public com.nw.domain.EventActionTypeMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), EventActionTypeMap.class);
            }
        };
    }
    
    public Converter<Formula, String> ApplicationConversionServiceFactoryBean.getFormulaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Formula, java.lang.String>() {
            public String convert(Formula formula) {
                return new StringBuilder().append(formula.getFormulaType()).append(' ').append(formula.getA()).append(' ').append(formula.getB()).append(' ').append(formula.getPer()).toString();
            }
        };
    }
    
    public Converter<Long, Formula> ApplicationConversionServiceFactoryBean.getIdToFormulaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Formula>() {
            public com.nw.domain.Formula convert(java.lang.Long id) {
                return Formula.findFormula(id);
            }
        };
    }
    
    public Converter<String, Formula> ApplicationConversionServiceFactoryBean.getStringToFormulaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Formula>() {
            public com.nw.domain.Formula convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Formula.class);
            }
        };
    }
    
    public Converter<GeoHomeZone, String> ApplicationConversionServiceFactoryBean.getGeoHomeZoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.GeoHomeZone, java.lang.String>() {
            public String convert(GeoHomeZone geoHomeZone) {
                return new StringBuilder().append(geoHomeZone.getGeoHomeZoneName()).append(' ').append(geoHomeZone.getGeoHomeZoneCode()).append(' ').append(geoHomeZone.getRemark()).append(' ').append(geoHomeZone.getGeoHomeZoneType()).toString();
            }
        };
    }
    
    public Converter<Long, GeoHomeZone> ApplicationConversionServiceFactoryBean.getIdToGeoHomeZoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.GeoHomeZone>() {
            public com.nw.domain.GeoHomeZone convert(java.lang.Long id) {
                return GeoHomeZone.findGeoHomeZone(id);
            }
        };
    }
    
    public Converter<String, GeoHomeZone> ApplicationConversionServiceFactoryBean.getStringToGeoHomeZoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.GeoHomeZone>() {
            public com.nw.domain.GeoHomeZone convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), GeoHomeZone.class);
            }
        };
    }
    
    public Converter<GeoNetZone, String> ApplicationConversionServiceFactoryBean.getGeoNetZoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.GeoNetZone, java.lang.String>() {
            public String convert(GeoNetZone geoNetZone) {
                return new StringBuilder().append(geoNetZone.getCellId()).append(' ').append(geoNetZone.getUpdateDate()).toString();
            }
        };
    }
    
    public Converter<Long, GeoNetZone> ApplicationConversionServiceFactoryBean.getIdToGeoNetZoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.GeoNetZone>() {
            public com.nw.domain.GeoNetZone convert(java.lang.Long id) {
                return GeoNetZone.findGeoNetZone(id);
            }
        };
    }
    
    public Converter<String, GeoNetZone> ApplicationConversionServiceFactoryBean.getStringToGeoNetZoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.GeoNetZone>() {
            public com.nw.domain.GeoNetZone convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), GeoNetZone.class);
            }
        };
    }
    
    public Converter<MapACMBalBal, String> ApplicationConversionServiceFactoryBean.getMapACMBalBalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.MapACMBalBal, java.lang.String>() {
            public String convert(MapACMBalBal mapACMBalBal) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, MapACMBalBal> ApplicationConversionServiceFactoryBean.getIdToMapACMBalBalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.MapACMBalBal>() {
            public com.nw.domain.MapACMBalBal convert(java.lang.Long id) {
                return MapACMBalBal.findMapACMBalBal(id);
            }
        };
    }
    
    public Converter<String, MapACMBalBal> ApplicationConversionServiceFactoryBean.getStringToMapACMBalBalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.MapACMBalBal>() {
            public com.nw.domain.MapACMBalBal convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MapACMBalBal.class);
            }
        };
    }
    
    public Converter<MapShareBalBal, String> ApplicationConversionServiceFactoryBean.getMapShareBalBalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.MapShareBalBal, java.lang.String>() {
            public String convert(MapShareBalBal mapShareBalBal) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, MapShareBalBal> ApplicationConversionServiceFactoryBean.getIdToMapShareBalBalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.MapShareBalBal>() {
            public com.nw.domain.MapShareBalBal convert(java.lang.Long id) {
                return MapShareBalBal.findMapShareBalBal(id);
            }
        };
    }
    
    public Converter<String, MapShareBalBal> ApplicationConversionServiceFactoryBean.getStringToMapShareBalBalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.MapShareBalBal>() {
            public com.nw.domain.MapShareBalBal convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MapShareBalBal.class);
            }
        };
    }
    
    public Converter<NormParam, String> ApplicationConversionServiceFactoryBean.getNormParamToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.NormParam, java.lang.String>() {
            public String convert(NormParam normParam) {
                return new StringBuilder().append(normParam.getConfigInput()).append(' ').append(normParam.getNormParamIndex()).toString();
            }
        };
    }
    
    public Converter<Long, NormParam> ApplicationConversionServiceFactoryBean.getIdToNormParamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.NormParam>() {
            public com.nw.domain.NormParam convert(java.lang.Long id) {
                return NormParam.findNormParam(id);
            }
        };
    }
    
    public Converter<String, NormParam> ApplicationConversionServiceFactoryBean.getStringToNormParamConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.NormParam>() {
            public com.nw.domain.NormParam convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NormParam.class);
            }
        };
    }
    
    public Converter<NormValue, String> ApplicationConversionServiceFactoryBean.getNormValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.NormValue, java.lang.String>() {
            public String convert(NormValue normValue) {
                return new StringBuilder().append(normValue.getValueName()).append(' ').append(normValue.getValueId()).append(' ').append(normValue.getDescription()).append(' ').append(normValue.getNormValueIndex()).toString();
            }
        };
    }
    
    public Converter<Integer, NormValue> ApplicationConversionServiceFactoryBean.getIdToNormValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, com.nw.domain.NormValue>() {
            public com.nw.domain.NormValue convert(java.lang.Integer id) {
                return NormValue.findNormValue(id);
            }
        };
    }
    
    public Converter<String, NormValue> ApplicationConversionServiceFactoryBean.getStringToNormValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.NormValue>() {
            public com.nw.domain.NormValue convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), NormValue.class);
            }
        };
    }
    
    public Converter<Normalizer, String> ApplicationConversionServiceFactoryBean.getNormalizerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Normalizer, java.lang.String>() {
            public String convert(Normalizer normalizer) {
                return new StringBuilder().append(normalizer.getNormalizerName()).append(' ').append(normalizer.getNormalizerType()).append(' ').append(normalizer.getNormalizerState()).append(' ').append(normalizer.getDefaultValue()).toString();
            }
        };
    }
    
    public Converter<Long, Normalizer> ApplicationConversionServiceFactoryBean.getIdToNormalizerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Normalizer>() {
            public com.nw.domain.Normalizer convert(java.lang.Long id) {
                return Normalizer.findNormalizer(id);
            }
        };
    }
    
    public Converter<String, Normalizer> ApplicationConversionServiceFactoryBean.getStringToNormalizerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Normalizer>() {
            public com.nw.domain.Normalizer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Normalizer.class);
            }
        };
    }
    
    public Converter<NormalizerNormParamMap, String> ApplicationConversionServiceFactoryBean.getNormalizerNormParamMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.NormalizerNormParamMap, java.lang.String>() {
            public String convert(NormalizerNormParamMap normalizerNormParamMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, NormalizerNormParamMap> ApplicationConversionServiceFactoryBean.getIdToNormalizerNormParamMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.NormalizerNormParamMap>() {
            public com.nw.domain.NormalizerNormParamMap convert(java.lang.Long id) {
                return NormalizerNormParamMap.findNormalizerNormParamMap(id);
            }
        };
    }
    
    public Converter<String, NormalizerNormParamMap> ApplicationConversionServiceFactoryBean.getStringToNormalizerNormParamMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.NormalizerNormParamMap>() {
            public com.nw.domain.NormalizerNormParamMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NormalizerNormParamMap.class);
            }
        };
    }
    
    public Converter<NormalizerNormValueMap, String> ApplicationConversionServiceFactoryBean.getNormalizerNormValueMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.NormalizerNormValueMap, java.lang.String>() {
            public String convert(NormalizerNormValueMap normalizerNormValueMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, NormalizerNormValueMap> ApplicationConversionServiceFactoryBean.getIdToNormalizerNormValueMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.NormalizerNormValueMap>() {
            public com.nw.domain.NormalizerNormValueMap convert(java.lang.Long id) {
                return NormalizerNormValueMap.findNormalizerNormValueMap(id);
            }
        };
    }
    
    public Converter<String, NormalizerNormValueMap> ApplicationConversionServiceFactoryBean.getStringToNormalizerNormValueMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.NormalizerNormValueMap>() {
            public com.nw.domain.NormalizerNormValueMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NormalizerNormValueMap.class);
            }
        };
    }
    
    public Converter<Offer, String> ApplicationConversionServiceFactoryBean.getOfferToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Offer, java.lang.String>() {
            public String convert(Offer offer) {
                return new StringBuilder().append(offer.getOfferName()).append(' ').append(offer.getPriority()).append(' ').append(offer.getEffDate()).append(' ').append(offer.getExpDate()).toString();
            }
        };
    }
    
    public Converter<Long, Offer> ApplicationConversionServiceFactoryBean.getIdToOfferConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Offer>() {
            public com.nw.domain.Offer convert(java.lang.Long id) {
                return Offer.findOffer(id);
            }
        };
    }
    
    public Converter<String, Offer> ApplicationConversionServiceFactoryBean.getStringToOfferConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Offer>() {
            public com.nw.domain.Offer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Offer.class);
            }
        };
    }
    
    public Converter<OfferActionMap, String> ApplicationConversionServiceFactoryBean.getOfferActionMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.OfferActionMap, java.lang.String>() {
            public String convert(OfferActionMap offerActionMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, OfferActionMap> ApplicationConversionServiceFactoryBean.getIdToOfferActionMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.OfferActionMap>() {
            public com.nw.domain.OfferActionMap convert(java.lang.Long id) {
                return OfferActionMap.findOfferActionMap(id);
            }
        };
    }
    
    public Converter<String, OfferActionMap> ApplicationConversionServiceFactoryBean.getStringToOfferActionMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.OfferActionMap>() {
            public com.nw.domain.OfferActionMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), OfferActionMap.class);
            }
        };
    }
    
    public Converter<OfferParameterMap, String> ApplicationConversionServiceFactoryBean.getOfferParameterMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.OfferParameterMap, java.lang.String>() {
            public String convert(OfferParameterMap offerParameterMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, OfferParameterMap> ApplicationConversionServiceFactoryBean.getIdToOfferParameterMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.OfferParameterMap>() {
            public com.nw.domain.OfferParameterMap convert(java.lang.Long id) {
                return OfferParameterMap.findOfferParameterMap(id);
            }
        };
    }
    
    public Converter<String, OfferParameterMap> ApplicationConversionServiceFactoryBean.getStringToOfferParameterMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.OfferParameterMap>() {
            public com.nw.domain.OfferParameterMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), OfferParameterMap.class);
            }
        };
    }
    
    public Converter<Parameters, String> ApplicationConversionServiceFactoryBean.getParametersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Parameters, java.lang.String>() {
            public String convert(Parameters parameters) {
                return new StringBuilder().append(parameters.getOwnerLevel()).append(' ').append(parameters.getParameterValue()).toString();
            }
        };
    }
    
    public Converter<Long, Parameters> ApplicationConversionServiceFactoryBean.getIdToParametersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Parameters>() {
            public com.nw.domain.Parameters convert(java.lang.Long id) {
                return Parameters.findParameters(id);
            }
        };
    }
    
    public Converter<String, Parameters> ApplicationConversionServiceFactoryBean.getStringToParametersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Parameters>() {
            public com.nw.domain.Parameters convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Parameters.class);
            }
        };
    }
    
    public Converter<PriceComponent, String> ApplicationConversionServiceFactoryBean.getPriceComponentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.PriceComponent, java.lang.String>() {
            public String convert(PriceComponent priceComponent) {
                return new StringBuilder().append(priceComponent.getPriceComponentName()).toString();
            }
        };
    }
    
    public Converter<Long, PriceComponent> ApplicationConversionServiceFactoryBean.getIdToPriceComponentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.PriceComponent>() {
            public com.nw.domain.PriceComponent convert(java.lang.Long id) {
                return PriceComponent.findPriceComponent(id);
            }
        };
    }
    
    public Converter<String, PriceComponent> ApplicationConversionServiceFactoryBean.getStringToPriceComponentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.PriceComponent>() {
            public com.nw.domain.PriceComponent convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PriceComponent.class);
            }
        };
    }
    
    public Converter<PriceComponentBlockMap, String> ApplicationConversionServiceFactoryBean.getPriceComponentBlockMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.PriceComponentBlockMap, java.lang.String>() {
            public String convert(PriceComponentBlockMap priceComponentBlockMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, PriceComponentBlockMap> ApplicationConversionServiceFactoryBean.getIdToPriceComponentBlockMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.PriceComponentBlockMap>() {
            public com.nw.domain.PriceComponentBlockMap convert(java.lang.Long id) {
                return PriceComponentBlockMap.findPriceComponentBlockMap(id);
            }
        };
    }
    
    public Converter<String, PriceComponentBlockMap> ApplicationConversionServiceFactoryBean.getStringToPriceComponentBlockMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.PriceComponentBlockMap>() {
            public com.nw.domain.PriceComponentBlockMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PriceComponentBlockMap.class);
            }
        };
    }
    
    public Converter<PriceRateMap, String> ApplicationConversionServiceFactoryBean.getPriceRateMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.PriceRateMap, java.lang.String>() {
            public String convert(PriceRateMap priceRateMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, PriceRateMap> ApplicationConversionServiceFactoryBean.getIdToPriceRateMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.PriceRateMap>() {
            public com.nw.domain.PriceRateMap convert(java.lang.Long id) {
                return PriceRateMap.findPriceRateMap(id);
            }
        };
    }
    
    public Converter<String, PriceRateMap> ApplicationConversionServiceFactoryBean.getStringToPriceRateMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.PriceRateMap>() {
            public com.nw.domain.PriceRateMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PriceRateMap.class);
            }
        };
    }
    
    public Converter<RateTable, String> ApplicationConversionServiceFactoryBean.getRateTableToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.RateTable, java.lang.String>() {
            public String convert(RateTable rateTable) {
                return new StringBuilder().append(rateTable.getRateTableName()).append(' ').append(rateTable.getEffDate()).append(' ').append(rateTable.getExpDate()).append(' ').append(rateTable.getRemark()).toString();
            }
        };
    }
    
    public Converter<Long, RateTable> ApplicationConversionServiceFactoryBean.getIdToRateTableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.RateTable>() {
            public com.nw.domain.RateTable convert(java.lang.Long id) {
                return RateTable.findRateTable(id);
            }
        };
    }
    
    public Converter<String, RateTable> ApplicationConversionServiceFactoryBean.getStringToRateTableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.RateTable>() {
            public com.nw.domain.RateTable convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RateTable.class);
            }
        };
    }
    
    public Converter<RateTableResult, String> ApplicationConversionServiceFactoryBean.getRateTableResultToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.RateTableResult, java.lang.String>() {
            public String convert(RateTableResult rateTableResult) {
                return new StringBuilder().append(rateTableResult.getRowIndex()).toString();
            }
        };
    }
    
    public Converter<Long, RateTableResult> ApplicationConversionServiceFactoryBean.getIdToRateTableResultConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.RateTableResult>() {
            public com.nw.domain.RateTableResult convert(java.lang.Long id) {
                return RateTableResult.findRateTableResult(id);
            }
        };
    }
    
    public Converter<String, RateTableResult> ApplicationConversionServiceFactoryBean.getStringToRateTableResultConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.RateTableResult>() {
            public com.nw.domain.RateTableResult convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RateTableResult.class);
            }
        };
    }
    
    public Converter<ReserveInfo, String> ApplicationConversionServiceFactoryBean.getReserveInfoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ReserveInfo, java.lang.String>() {
            public String convert(ReserveInfo reserveInfo) {
                return new StringBuilder().append(reserveInfo.getMaxReserve()).append(' ').append(reserveInfo.getMinReserve()).append(' ').append(reserveInfo.getUsageQuotaThreshold()).toString();
            }
        };
    }
    
    public Converter<Long, ReserveInfo> ApplicationConversionServiceFactoryBean.getIdToReserveInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ReserveInfo>() {
            public com.nw.domain.ReserveInfo convert(java.lang.Long id) {
                return ReserveInfo.findReserveInfo(id);
            }
        };
    }
    
    public Converter<String, ReserveInfo> ApplicationConversionServiceFactoryBean.getStringToReserveInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ReserveInfo>() {
            public com.nw.domain.ReserveInfo convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ReserveInfo.class);
            }
        };
    }
    
    public Converter<ReserveInfoActionMap, String> ApplicationConversionServiceFactoryBean.getReserveInfoActionMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ReserveInfoActionMap, java.lang.String>() {
            public String convert(ReserveInfoActionMap reserveInfoActionMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, ReserveInfoActionMap> ApplicationConversionServiceFactoryBean.getIdToReserveInfoActionMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ReserveInfoActionMap>() {
            public com.nw.domain.ReserveInfoActionMap convert(java.lang.Long id) {
                return ReserveInfoActionMap.findReserveInfoActionMap(id);
            }
        };
    }
    
    public Converter<String, ReserveInfoActionMap> ApplicationConversionServiceFactoryBean.getStringToReserveInfoActionMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ReserveInfoActionMap>() {
            public com.nw.domain.ReserveInfoActionMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ReserveInfoActionMap.class);
            }
        };
    }
    
    public Converter<ResultRateMap, String> ApplicationConversionServiceFactoryBean.getResultRateMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ResultRateMap, java.lang.String>() {
            public String convert(ResultRateMap resultRateMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, ResultRateMap> ApplicationConversionServiceFactoryBean.getIdToResultRateMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ResultRateMap>() {
            public com.nw.domain.ResultRateMap convert(java.lang.Long id) {
                return ResultRateMap.findResultRateMap(id);
            }
        };
    }
    
    public Converter<String, ResultRateMap> ApplicationConversionServiceFactoryBean.getStringToResultRateMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ResultRateMap>() {
            public com.nw.domain.ResultRateMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ResultRateMap.class);
            }
        };
    }
    
    public Converter<RowDT, String> ApplicationConversionServiceFactoryBean.getRowDTToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.RowDT, java.lang.String>() {
            public String convert(RowDT rowDT) {
                return new StringBuilder().append(rowDT.getRowValue()).append(' ').append(rowDT.getRowIndex()).toString();
            }
        };
    }
    
    public Converter<Long, RowDT> ApplicationConversionServiceFactoryBean.getIdToRowDTConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.RowDT>() {
            public com.nw.domain.RowDT convert(java.lang.Long id) {
                return RowDT.findRowDT(id);
            }
        };
    }
    
    public Converter<String, RowDT> ApplicationConversionServiceFactoryBean.getStringToRowDTConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.RowDT>() {
            public com.nw.domain.RowDT convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RowDT.class);
            }
        };
    }
    
    public Converter<RowDecisionTableMap, String> ApplicationConversionServiceFactoryBean.getRowDecisionTableMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.RowDecisionTableMap, java.lang.String>() {
            public String convert(RowDecisionTableMap rowDecisionTableMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, RowDecisionTableMap> ApplicationConversionServiceFactoryBean.getIdToRowDecisionTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.RowDecisionTableMap>() {
            public com.nw.domain.RowDecisionTableMap convert(java.lang.Long id) {
                return RowDecisionTableMap.findRowDecisionTableMap(id);
            }
        };
    }
    
    public Converter<String, RowDecisionTableMap> ApplicationConversionServiceFactoryBean.getStringToRowDecisionTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.RowDecisionTableMap>() {
            public com.nw.domain.RowDecisionTableMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RowDecisionTableMap.class);
            }
        };
    }
    
    public Converter<RowOCS, String> ApplicationConversionServiceFactoryBean.getRowOCSToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.RowOCS, java.lang.String>() {
            public String convert(RowOCS rowOCS) {
                return new StringBuilder().append(rowOCS.getRowIndexId()).toString();
            }
        };
    }
    
    public Converter<Long, RowOCS> ApplicationConversionServiceFactoryBean.getIdToRowOCSConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.RowOCS>() {
            public com.nw.domain.RowOCS convert(java.lang.Long id) {
                return RowOCS.findRowOCS(id);
            }
        };
    }
    
    public Converter<String, RowOCS> ApplicationConversionServiceFactoryBean.getStringToRowOCSConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.RowOCS>() {
            public com.nw.domain.RowOCS convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RowOCS.class);
            }
        };
    }
    
    public Converter<SortPriceComponent, String> ApplicationConversionServiceFactoryBean.getSortPriceComponentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.SortPriceComponent, java.lang.String>() {
            public String convert(SortPriceComponent sortPriceComponent) {
                return new StringBuilder().append(sortPriceComponent.getSortPriceComponentName()).toString();
            }
        };
    }
    
    public Converter<Long, SortPriceComponent> ApplicationConversionServiceFactoryBean.getIdToSortPriceComponentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.SortPriceComponent>() {
            public com.nw.domain.SortPriceComponent convert(java.lang.Long id) {
                return SortPriceComponent.findSortPriceComponent(id);
            }
        };
    }
    
    public Converter<String, SortPriceComponent> ApplicationConversionServiceFactoryBean.getStringToSortPriceComponentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.SortPriceComponent>() {
            public com.nw.domain.SortPriceComponent convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SortPriceComponent.class);
            }
        };
    }
    
    public Converter<SortPriceRateTableMap, String> ApplicationConversionServiceFactoryBean.getSortPriceRateTableMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.SortPriceRateTableMap, java.lang.String>() {
            public String convert(SortPriceRateTableMap sortPriceRateTableMap) {
                return new StringBuilder().append(sortPriceRateTableMap.getRateTableIndex()).toString();
            }
        };
    }
    
    public Converter<Long, SortPriceRateTableMap> ApplicationConversionServiceFactoryBean.getIdToSortPriceRateTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.SortPriceRateTableMap>() {
            public com.nw.domain.SortPriceRateTableMap convert(java.lang.Long id) {
                return SortPriceRateTableMap.findSortPriceRateTableMap(id);
            }
        };
    }
    
    public Converter<String, SortPriceRateTableMap> ApplicationConversionServiceFactoryBean.getStringToSortPriceRateTableMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.SortPriceRateTableMap>() {
            public com.nw.domain.SortPriceRateTableMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SortPriceRateTableMap.class);
            }
        };
    }
    
    public Converter<Threshold, String> ApplicationConversionServiceFactoryBean.getThresholdToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Threshold, java.lang.String>() {
            public String convert(Threshold threshold) {
                return new StringBuilder().append(threshold.getThresholdType()).append(' ').append(threshold.getThresValue()).append(' ').append(threshold.getThresholdName()).append(' ').append(threshold.getExternalId()).toString();
            }
        };
    }
    
    public Converter<Long, Threshold> ApplicationConversionServiceFactoryBean.getIdToThresholdConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Threshold>() {
            public com.nw.domain.Threshold convert(java.lang.Long id) {
                return Threshold.findThreshold(id);
            }
        };
    }
    
    public Converter<String, Threshold> ApplicationConversionServiceFactoryBean.getStringToThresholdConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Threshold>() {
            public com.nw.domain.Threshold convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Threshold.class);
            }
        };
    }
    
    public Converter<ThresholdBalTypeMap, String> ApplicationConversionServiceFactoryBean.getThresholdBalTypeMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ThresholdBalTypeMap, java.lang.String>() {
            public String convert(ThresholdBalTypeMap thresholdBalTypeMap) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, ThresholdBalTypeMap> ApplicationConversionServiceFactoryBean.getIdToThresholdBalTypeMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ThresholdBalTypeMap>() {
            public com.nw.domain.ThresholdBalTypeMap convert(java.lang.Long id) {
                return ThresholdBalTypeMap.findThresholdBalTypeMap(id);
            }
        };
    }
    
    public Converter<String, ThresholdBalTypeMap> ApplicationConversionServiceFactoryBean.getStringToThresholdBalTypeMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ThresholdBalTypeMap>() {
            public com.nw.domain.ThresholdBalTypeMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ThresholdBalTypeMap.class);
            }
        };
    }
    
    public Converter<TriggerDestination, String> ApplicationConversionServiceFactoryBean.getTriggerDestinationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerDestination, java.lang.String>() {
            public String convert(TriggerDestination triggerDestination) {
                return new StringBuilder().append(triggerDestination.getDestName()).append(' ').append(triggerDestination.getDestDescription()).append(' ').append(triggerDestination.getStatus()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerDestination> ApplicationConversionServiceFactoryBean.getIdToTriggerDestinationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerDestination>() {
            public com.nw.domain.TriggerDestination convert(java.lang.Long id) {
                return TriggerDestination.findTriggerDestination(id);
            }
        };
    }
    
    public Converter<String, TriggerDestination> ApplicationConversionServiceFactoryBean.getStringToTriggerDestinationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerDestination>() {
            public com.nw.domain.TriggerDestination convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerDestination.class);
            }
        };
    }
    
    public Converter<TriggerEvent, String> ApplicationConversionServiceFactoryBean.getTriggerEventToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerEvent, java.lang.String>() {
            public String convert(TriggerEvent triggerEvent) {
                return new StringBuilder().append(triggerEvent.getTrigger_event_name()).append(' ').append(triggerEvent.getStatus()).append(' ').append(triggerEvent.getDelay_process()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerEvent> ApplicationConversionServiceFactoryBean.getIdToTriggerEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerEvent>() {
            public com.nw.domain.TriggerEvent convert(java.lang.Long id) {
                return TriggerEvent.findTriggerEvent(id);
            }
        };
    }
    
    public Converter<String, TriggerEvent> ApplicationConversionServiceFactoryBean.getStringToTriggerEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerEvent>() {
            public com.nw.domain.TriggerEvent convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerEvent.class);
            }
        };
    }
    
    public Converter<TriggerEventType, String> ApplicationConversionServiceFactoryBean.getTriggerEventTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerEventType, java.lang.String>() {
            public String convert(TriggerEventType triggerEventType) {
                return new StringBuilder().append(triggerEventType.getEventName()).append(' ').append(triggerEventType.getEventDescription()).append(' ').append(triggerEventType.getProtocol()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerEventType> ApplicationConversionServiceFactoryBean.getIdToTriggerEventTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerEventType>() {
            public com.nw.domain.TriggerEventType convert(java.lang.Long id) {
                return TriggerEventType.findTriggerEventType(id);
            }
        };
    }
    
    public Converter<String, TriggerEventType> ApplicationConversionServiceFactoryBean.getStringToTriggerEventTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerEventType>() {
            public com.nw.domain.TriggerEventType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerEventType.class);
            }
        };
    }
    
    public Converter<TriggerFieldBuilder, String> ApplicationConversionServiceFactoryBean.getTriggerFieldBuilderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerFieldBuilder, java.lang.String>() {
            public String convert(TriggerFieldBuilder triggerFieldBuilder) {
                return new StringBuilder().append(triggerFieldBuilder.getField_name()).append(' ').append(triggerFieldBuilder.getProcessFunction()).append(' ').append(triggerFieldBuilder.getFormatTemplateId()).append(' ').append(triggerFieldBuilder.getLangId()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerFieldBuilder> ApplicationConversionServiceFactoryBean.getIdToTriggerFieldBuilderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerFieldBuilder>() {
            public com.nw.domain.TriggerFieldBuilder convert(java.lang.Long id) {
                return TriggerFieldBuilder.findTriggerFieldBuilder(id);
            }
        };
    }
    
    public Converter<String, TriggerFieldBuilder> ApplicationConversionServiceFactoryBean.getStringToTriggerFieldBuilderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerFieldBuilder>() {
            public com.nw.domain.TriggerFieldBuilder convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerFieldBuilder.class);
            }
        };
    }
    
    public Converter<TriggerFieldFormat, String> ApplicationConversionServiceFactoryBean.getTriggerFieldFormatToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerFieldFormat, java.lang.String>() {
            public String convert(TriggerFieldFormat triggerFieldFormat) {
                return new StringBuilder().append(triggerFieldFormat.getLangId()).append(' ').append(triggerFieldFormat.getText()).append(' ').append(triggerFieldFormat.getFormatType()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerFieldFormat> ApplicationConversionServiceFactoryBean.getIdToTriggerFieldFormatConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerFieldFormat>() {
            public com.nw.domain.TriggerFieldFormat convert(java.lang.Long id) {
                return TriggerFieldFormat.findTriggerFieldFormat(id);
            }
        };
    }
    
    public Converter<String, TriggerFieldFormat> ApplicationConversionServiceFactoryBean.getStringToTriggerFieldFormatConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerFieldFormat>() {
            public com.nw.domain.TriggerFieldFormat convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerFieldFormat.class);
            }
        };
    }
    
    public Converter<TriggerFieldList, String> ApplicationConversionServiceFactoryBean.getTriggerFieldListToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerFieldList, java.lang.String>() {
            public String convert(TriggerFieldList triggerFieldList) {
                return new StringBuilder().append(triggerFieldList.getFieldName()).append(' ').append(triggerFieldList.getFieldOrder()).append(' ').append(triggerFieldList.getFieldFormat()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerFieldList> ApplicationConversionServiceFactoryBean.getIdToTriggerFieldListConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerFieldList>() {
            public com.nw.domain.TriggerFieldList convert(java.lang.Long id) {
                return TriggerFieldList.findTriggerFieldList(id);
            }
        };
    }
    
    public Converter<String, TriggerFieldList> ApplicationConversionServiceFactoryBean.getStringToTriggerFieldListConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerFieldList>() {
            public com.nw.domain.TriggerFieldList convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerFieldList.class);
            }
        };
    }
    
    public Converter<TriggerMsg, String> ApplicationConversionServiceFactoryBean.getTriggerMsgToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerMsg, java.lang.String>() {
            public String convert(TriggerMsg triggerMsg) {
                return new StringBuilder().append(triggerMsg.getMsgName()).append(' ').append(triggerMsg.getMsgDesc()).append(' ').append(triggerMsg.getStatus()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerMsg> ApplicationConversionServiceFactoryBean.getIdToTriggerMsgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerMsg>() {
            public com.nw.domain.TriggerMsg convert(java.lang.Long id) {
                return TriggerMsg.findTriggerMsg(id);
            }
        };
    }
    
    public Converter<String, TriggerMsg> ApplicationConversionServiceFactoryBean.getStringToTriggerMsgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerMsg>() {
            public com.nw.domain.TriggerMsg convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerMsg.class);
            }
        };
    }
    
    public Converter<TriggerMsgField, String> ApplicationConversionServiceFactoryBean.getTriggerMsgFieldToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerMsgField, java.lang.String>() {
            public String convert(TriggerMsgField triggerMsgField) {
                return new StringBuilder().append(triggerMsgField.getMsgOrder()).append(' ').append(triggerMsgField.getMsgStatus()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerMsgField> ApplicationConversionServiceFactoryBean.getIdToTriggerMsgFieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerMsgField>() {
            public com.nw.domain.TriggerMsgField convert(java.lang.Long id) {
                return TriggerMsgField.findTriggerMsgField(id);
            }
        };
    }
    
    public Converter<String, TriggerMsgField> ApplicationConversionServiceFactoryBean.getStringToTriggerMsgFieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerMsgField>() {
            public com.nw.domain.TriggerMsgField convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerMsgField.class);
            }
        };
    }
    
    public Converter<TriggerOCS, String> ApplicationConversionServiceFactoryBean.getTriggerOCSToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerOCS, java.lang.String>() {
            public String convert(TriggerOCS triggerOCS) {
                return new StringBuilder().append(triggerOCS.getTriggerName()).append(' ').append(triggerOCS.getStatus()).append(' ').append(triggerOCS.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerOCS> ApplicationConversionServiceFactoryBean.getIdToTriggerOCSConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerOCS>() {
            public com.nw.domain.TriggerOCS convert(java.lang.Long id) {
                return TriggerOCS.findTriggerOCS(id);
            }
        };
    }
    
    public Converter<String, TriggerOCS> ApplicationConversionServiceFactoryBean.getStringToTriggerOCSConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerOCS>() {
            public com.nw.domain.TriggerOCS convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerOCS.class);
            }
        };
    }
    
    public Converter<TriggerType, String> ApplicationConversionServiceFactoryBean.getTriggerTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.TriggerType, java.lang.String>() {
            public String convert(TriggerType triggerType) {
                return new StringBuilder().append(triggerType.getTriggeTypeName()).append(' ').append(triggerType.getTriggerTypeDescription()).toString();
            }
        };
    }
    
    public Converter<Long, TriggerType> ApplicationConversionServiceFactoryBean.getIdToTriggerTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.TriggerType>() {
            public com.nw.domain.TriggerType convert(java.lang.Long id) {
                return TriggerType.findTriggerType(id);
            }
        };
    }
    
    public Converter<String, TriggerType> ApplicationConversionServiceFactoryBean.getStringToTriggerTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.TriggerType>() {
            public com.nw.domain.TriggerType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TriggerType.class);
            }
        };
    }
    
    public Converter<UnitType, String> ApplicationConversionServiceFactoryBean.getUnitTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.UnitType, java.lang.String>() {
            public String convert(UnitType unitType) {
                return new StringBuilder().append(unitType.getName()).append(' ').append(unitType.getPrecisions()).append(' ').append(unitType.getBaseRate()).append(' ').append(unitType.getDisplayRate()).toString();
            }
        };
    }
    
    public Converter<Long, UnitType> ApplicationConversionServiceFactoryBean.getIdToUnitTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.UnitType>() {
            public com.nw.domain.UnitType convert(java.lang.Long id) {
                return UnitType.findUnitType(id);
            }
        };
    }
    
    public Converter<String, UnitType> ApplicationConversionServiceFactoryBean.getStringToUnitTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.UnitType>() {
            public com.nw.domain.UnitType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UnitType.class);
            }
        };
    }
    
    public Converter<ZoneData, String> ApplicationConversionServiceFactoryBean.getZoneDataToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ZoneData, java.lang.String>() {
            public String convert(ZoneData zoneData) {
                return new StringBuilder().append(zoneData.getZoneDataValue()).toString();
            }
        };
    }
    
    public Converter<Long, ZoneData> ApplicationConversionServiceFactoryBean.getIdToZoneDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ZoneData>() {
            public com.nw.domain.ZoneData convert(java.lang.Long id) {
                return ZoneData.findZoneData(id);
            }
        };
    }
    
    public Converter<String, ZoneData> ApplicationConversionServiceFactoryBean.getStringToZoneDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ZoneData>() {
            public com.nw.domain.ZoneData convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ZoneData.class);
            }
        };
    }
    
    public Converter<ZoneMap, String> ApplicationConversionServiceFactoryBean.getZoneMapToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.ZoneMap, java.lang.String>() {
            public String convert(ZoneMap zoneMap) {
                return new StringBuilder().append(zoneMap.getZoneMapName()).append(' ').append(zoneMap.getRemark()).toString();
            }
        };
    }
    
    public Converter<Long, ZoneMap> ApplicationConversionServiceFactoryBean.getIdToZoneMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.ZoneMap>() {
            public com.nw.domain.ZoneMap convert(java.lang.Long id) {
                return ZoneMap.findZoneMap(id);
            }
        };
    }
    
    public Converter<String, ZoneMap> ApplicationConversionServiceFactoryBean.getStringToZoneMapConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.ZoneMap>() {
            public com.nw.domain.ZoneMap convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ZoneMap.class);
            }
        };
    }
    
    public Converter<Zones, String> ApplicationConversionServiceFactoryBean.getZonesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.nw.domain.Zones, java.lang.String>() {
            public String convert(Zones zones) {
                return new StringBuilder().append(zones.getZoneName()).append(' ').append(zones.getZoneCode()).append(' ').append(zones.getRemark()).toString();
            }
        };
    }
    
    public Converter<Long, Zones> ApplicationConversionServiceFactoryBean.getIdToZonesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.nw.domain.Zones>() {
            public com.nw.domain.Zones convert(java.lang.Long id) {
                return Zones.findZones(id);
            }
        };
    }
    
    public Converter<String, Zones> ApplicationConversionServiceFactoryBean.getStringToZonesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.nw.domain.Zones>() {
            public com.nw.domain.Zones convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Zones.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAcmBillCycleToStringConverter());
        registry.addConverter(getIdToAcmBillCycleConverter());
        registry.addConverter(getStringToAcmBillCycleConverter());
        registry.addConverter(getActionPriceComponentMapToStringConverter());
        registry.addConverter(getIdToActionPriceComponentMapConverter());
        registry.addConverter(getStringToActionPriceComponentMapConverter());
        registry.addConverter(getActionTypeToStringConverter());
        registry.addConverter(getIdToActionTypeConverter());
        registry.addConverter(getStringToActionTypeConverter());
        registry.addConverter(getActionsToStringConverter());
        registry.addConverter(getIdToActionsConverter());
        registry.addConverter(getStringToActionsConverter());
        registry.addConverter(getBalTypeToStringConverter());
        registry.addConverter(getIdToBalTypeConverter());
        registry.addConverter(getStringToBalTypeConverter());
        registry.addConverter(getBillingCycleToStringConverter());
        registry.addConverter(getIdToBillingCycleConverter());
        registry.addConverter(getStringToBillingCycleConverter());
        registry.addConverter(getBillingCycleTypeToStringConverter());
        registry.addConverter(getIdToBillingCycleTypeConverter());
        registry.addConverter(getStringToBillingCycleTypeConverter());
        registry.addConverter(getBlockToStringConverter());
        registry.addConverter(getIdToBlockConverter());
        registry.addConverter(getStringToBlockConverter());
        registry.addConverter(getBlockRateTableMapToStringConverter());
        registry.addConverter(getIdToBlockRateTableMapConverter());
        registry.addConverter(getStringToBlockRateTableMapConverter());
        registry.addConverter(getCalcUnitToStringConverter());
        registry.addConverter(getIdToCalcUnitConverter());
        registry.addConverter(getStringToCalcUnitConverter());
        registry.addConverter(getCategoryToStringConverter());
        registry.addConverter(getIdToCategoryConverter());
        registry.addConverter(getStringToCategoryConverter());
        registry.addConverter(getColumnDTToStringConverter());
        registry.addConverter(getIdToColumnDTConverter());
        registry.addConverter(getStringToColumnDTConverter());
        registry.addConverter(getColumnDecisionTableMapToStringConverter());
        registry.addConverter(getIdToColumnDecisionTableMapConverter());
        registry.addConverter(getStringToColumnDecisionTableMapConverter());
        registry.addConverter(getDecisionTableToStringConverter());
        registry.addConverter(getIdToDecisionTableConverter());
        registry.addConverter(getStringToDecisionTableConverter());
        registry.addConverter(getDynamicReserveToStringConverter());
        registry.addConverter(getIdToDynamicReserveConverter());
        registry.addConverter(getStringToDynamicReserveConverter());
        registry.addConverter(getDynamicReserveRateTableMapToStringConverter());
        registry.addConverter(getIdToDynamicReserveRateTableMapConverter());
        registry.addConverter(getStringToDynamicReserveRateTableMapConverter());
        registry.addConverter(getEventToStringConverter());
        registry.addConverter(getIdToEventConverter());
        registry.addConverter(getStringToEventConverter());
        registry.addConverter(getEventActionMapToStringConverter());
        registry.addConverter(getIdToEventActionMapConverter());
        registry.addConverter(getStringToEventActionMapConverter());
        registry.addConverter(getEventActionTypeMapToStringConverter());
        registry.addConverter(getIdToEventActionTypeMapConverter());
        registry.addConverter(getStringToEventActionTypeMapConverter());
        registry.addConverter(getFormulaToStringConverter());
        registry.addConverter(getIdToFormulaConverter());
        registry.addConverter(getStringToFormulaConverter());
        registry.addConverter(getGeoHomeZoneToStringConverter());
        registry.addConverter(getIdToGeoHomeZoneConverter());
        registry.addConverter(getStringToGeoHomeZoneConverter());
        registry.addConverter(getGeoNetZoneToStringConverter());
        registry.addConverter(getIdToGeoNetZoneConverter());
        registry.addConverter(getStringToGeoNetZoneConverter());
        registry.addConverter(getMapACMBalBalToStringConverter());
        registry.addConverter(getIdToMapACMBalBalConverter());
        registry.addConverter(getStringToMapACMBalBalConverter());
        registry.addConverter(getMapShareBalBalToStringConverter());
        registry.addConverter(getIdToMapShareBalBalConverter());
        registry.addConverter(getStringToMapShareBalBalConverter());
        registry.addConverter(getNormParamToStringConverter());
        registry.addConverter(getIdToNormParamConverter());
        registry.addConverter(getStringToNormParamConverter());
        registry.addConverter(getNormValueToStringConverter());
        registry.addConverter(getIdToNormValueConverter());
        registry.addConverter(getStringToNormValueConverter());
        registry.addConverter(getNormalizerToStringConverter());
        registry.addConverter(getIdToNormalizerConverter());
        registry.addConverter(getStringToNormalizerConverter());
        registry.addConverter(getNormalizerNormParamMapToStringConverter());
        registry.addConverter(getIdToNormalizerNormParamMapConverter());
        registry.addConverter(getStringToNormalizerNormParamMapConverter());
        registry.addConverter(getNormalizerNormValueMapToStringConverter());
        registry.addConverter(getIdToNormalizerNormValueMapConverter());
        registry.addConverter(getStringToNormalizerNormValueMapConverter());
        registry.addConverter(getOfferToStringConverter());
        registry.addConverter(getIdToOfferConverter());
        registry.addConverter(getStringToOfferConverter());
        registry.addConverter(getOfferActionMapToStringConverter());
        registry.addConverter(getIdToOfferActionMapConverter());
        registry.addConverter(getStringToOfferActionMapConverter());
        registry.addConverter(getOfferParameterMapToStringConverter());
        registry.addConverter(getIdToOfferParameterMapConverter());
        registry.addConverter(getStringToOfferParameterMapConverter());
        registry.addConverter(getParametersToStringConverter());
        registry.addConverter(getIdToParametersConverter());
        registry.addConverter(getStringToParametersConverter());
        registry.addConverter(getPriceComponentToStringConverter());
        registry.addConverter(getIdToPriceComponentConverter());
        registry.addConverter(getStringToPriceComponentConverter());
        registry.addConverter(getPriceComponentBlockMapToStringConverter());
        registry.addConverter(getIdToPriceComponentBlockMapConverter());
        registry.addConverter(getStringToPriceComponentBlockMapConverter());
        registry.addConverter(getPriceRateMapToStringConverter());
        registry.addConverter(getIdToPriceRateMapConverter());
        registry.addConverter(getStringToPriceRateMapConverter());
        registry.addConverter(getRateTableToStringConverter());
        registry.addConverter(getIdToRateTableConverter());
        registry.addConverter(getStringToRateTableConverter());
        registry.addConverter(getRateTableResultToStringConverter());
        registry.addConverter(getIdToRateTableResultConverter());
        registry.addConverter(getStringToRateTableResultConverter());
        registry.addConverter(getReserveInfoToStringConverter());
        registry.addConverter(getIdToReserveInfoConverter());
        registry.addConverter(getStringToReserveInfoConverter());
        registry.addConverter(getReserveInfoActionMapToStringConverter());
        registry.addConverter(getIdToReserveInfoActionMapConverter());
        registry.addConverter(getStringToReserveInfoActionMapConverter());
        registry.addConverter(getResultRateMapToStringConverter());
        registry.addConverter(getIdToResultRateMapConverter());
        registry.addConverter(getStringToResultRateMapConverter());
        registry.addConverter(getRowDTToStringConverter());
        registry.addConverter(getIdToRowDTConverter());
        registry.addConverter(getStringToRowDTConverter());
        registry.addConverter(getRowDecisionTableMapToStringConverter());
        registry.addConverter(getIdToRowDecisionTableMapConverter());
        registry.addConverter(getStringToRowDecisionTableMapConverter());
        registry.addConverter(getRowOCSToStringConverter());
        registry.addConverter(getIdToRowOCSConverter());
        registry.addConverter(getStringToRowOCSConverter());
        registry.addConverter(getSortPriceComponentToStringConverter());
        registry.addConverter(getIdToSortPriceComponentConverter());
        registry.addConverter(getStringToSortPriceComponentConverter());
        registry.addConverter(getSortPriceRateTableMapToStringConverter());
        registry.addConverter(getIdToSortPriceRateTableMapConverter());
        registry.addConverter(getStringToSortPriceRateTableMapConverter());
        registry.addConverter(getThresholdToStringConverter());
        registry.addConverter(getIdToThresholdConverter());
        registry.addConverter(getStringToThresholdConverter());
        registry.addConverter(getThresholdBalTypeMapToStringConverter());
        registry.addConverter(getIdToThresholdBalTypeMapConverter());
        registry.addConverter(getStringToThresholdBalTypeMapConverter());
        registry.addConverter(getTriggerDestinationToStringConverter());
        registry.addConverter(getIdToTriggerDestinationConverter());
        registry.addConverter(getStringToTriggerDestinationConverter());
        registry.addConverter(getTriggerEventToStringConverter());
        registry.addConverter(getIdToTriggerEventConverter());
        registry.addConverter(getStringToTriggerEventConverter());
        registry.addConverter(getTriggerEventTypeToStringConverter());
        registry.addConverter(getIdToTriggerEventTypeConverter());
        registry.addConverter(getStringToTriggerEventTypeConverter());
        registry.addConverter(getTriggerFieldBuilderToStringConverter());
        registry.addConverter(getIdToTriggerFieldBuilderConverter());
        registry.addConverter(getStringToTriggerFieldBuilderConverter());
        registry.addConverter(getTriggerFieldFormatToStringConverter());
        registry.addConverter(getIdToTriggerFieldFormatConverter());
        registry.addConverter(getStringToTriggerFieldFormatConverter());
        registry.addConverter(getTriggerFieldListToStringConverter());
        registry.addConverter(getIdToTriggerFieldListConverter());
        registry.addConverter(getStringToTriggerFieldListConverter());
        registry.addConverter(getTriggerMsgToStringConverter());
        registry.addConverter(getIdToTriggerMsgConverter());
        registry.addConverter(getStringToTriggerMsgConverter());
        registry.addConverter(getTriggerMsgFieldToStringConverter());
        registry.addConverter(getIdToTriggerMsgFieldConverter());
        registry.addConverter(getStringToTriggerMsgFieldConverter());
        registry.addConverter(getTriggerOCSToStringConverter());
        registry.addConverter(getIdToTriggerOCSConverter());
        registry.addConverter(getStringToTriggerOCSConverter());
        registry.addConverter(getTriggerTypeToStringConverter());
        registry.addConverter(getIdToTriggerTypeConverter());
        registry.addConverter(getStringToTriggerTypeConverter());
        registry.addConverter(getUnitTypeToStringConverter());
        registry.addConverter(getIdToUnitTypeConverter());
        registry.addConverter(getStringToUnitTypeConverter());
        registry.addConverter(getZoneDataToStringConverter());
        registry.addConverter(getIdToZoneDataConverter());
        registry.addConverter(getStringToZoneDataConverter());
        registry.addConverter(getZoneMapToStringConverter());
        registry.addConverter(getIdToZoneMapConverter());
        registry.addConverter(getStringToZoneMapConverter());
        registry.addConverter(getZonesToStringConverter());
        registry.addConverter(getIdToZonesConverter());
        registry.addConverter(getStringToZonesConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
